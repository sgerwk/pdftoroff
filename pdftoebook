#!/bin/sh
#
# reformat a pdf to a smaller page by extracting text and compiling with groff
#
# -h for inline help
#
# to select only a region of each page, either:
#	pdftoebook -p '-m 2 -b [2,3-460,682]' file.pdf
#	pdftoebook -p '-m 3 -b [2,3-460,682]' file.pdf
# to obtain the coordinates, press key 'b' in hovacui to save the current box
# in hovacui-boxes.txt; enlarge slightly (~5.0) since only characters that fall
# completely in the box are included, and the current box may lack for example
# tall letters in the first line

# options

WIDTH=200
HEIGHT=250
MARGIN=5
RECUR=-n

while getopts "?w:h:m:p:" opt;
do
	case $opt in
	w)	WIDTH=$OPTARG;;
	h)	HEIGHT=$OPTARG;;
	m)	MARGIN=$OPTARG;;
	n)	RECUR="";;
	p)	CONVOPTS="$OPTARG";;
	*)	echo -en "usage:\n\tpdftoebook [-w width] [-h height] "
		echo -e "[-m margin] in.pdf [out.pdf]"
		echo -e "\t\t-w width\twidth in points, default 200"
		echo -e "\t\t-w height\theight in points, default 250"
		echo -e "\t\t-w margin\tmargin in points, default 5"
		echo -e "\t\t-p options\tpass options to pdftoroff"
		exit 1;;
	esac
done

# input and output file names

shift $((OPTIND - 1))
[ $# -lt 1 ] && echo "pdf file missing" && exit 1
IN="$1"
shift 1
OUT=$(basename "$IN" .pdf)-ebook.pdf
[ $# -gt 0 ] && OUT="$1"

echo "$IN -> $OUT ${WIDTH}x$HEIGHT +$MARGIN"

# calculate line and page

LINE=$(($WIDTH-$MARGIN*2))
PAGE=$(($HEIGHT-$MARGIN*2))

# extract text from pdf and recompile with groff

{
cat <<!
.\" set margins and line and page lenght
.device papersize=${WIDTH}p,${HEIGHT}p
.po ${MARGIN}p
.ll ${LINE}p
.pl ${PAGE}p
.
.\" font family (Helvetica)
.fam H
!

pdftoroff $RECUR $CONVOPTS "$IN";
} | \
groff -Dutf8 -Tpdf - > "$OUT"

